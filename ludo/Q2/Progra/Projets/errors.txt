============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.3.1, pluggy-1.0.0
rootdir: /config/data/TI/ludo/Q2/Progra/Projets
collected 22 items

test_log.py ...                                                          [ 13%]
test_log_manager.py .FFFFFFF                                             [ 50%]
test_main.py ..FFFFF.F                                                   [ 90%]
test_program_not_found.py ..                                             [100%]

=================================== FAILURES ===================================
_____________________________ test_init_with_logs ______________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_init_with_logs(folder_structure):
        path = str(folder_structure.joinpath('sous_dossier1/syslog.log'))
>       logs_string = load_log_from_file(path)

test_log_manager.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
_______________________________ test_clear_logs ________________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_clear_logs(folder_structure):
        path = str(folder_structure.joinpath('sous_dossier1/syslog.log'))
>       logs_string = load_log_from_file(path)

test_log_manager.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
________________________________ test_add_logs _________________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_add_logs(folder_structure):
        path = str(folder_structure.joinpath('sous_dossier1/syslog.log'))
>       logs_string = load_log_from_file(path)

test_log_manager.py:56: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
_______________________________ test_search_logs _______________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_search_logs(folder_structure):
        path = str(folder_structure.joinpath('sous_dossier1/syslog.log'))
>       logs_string = load_log_from_file(path)

test_log_manager.py:66: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
_______________________ test_search_logs_with_exception ________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_search_logs_with_exception(folder_structure):
        path = str(folder_structure.joinpath('sous_dossier1/syslog.log'))
>       logs_string = load_log_from_file(path)

test_log_manager.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
________________________________ test_nbr_logs _________________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_nbr_logs(folder_structure):
        path = str(folder_structure.joinpath('sous_dossier1/syslog.log'))
>       log_manager = LogManager(convert_logs(load_log_from_file(path), path))

test_log_manager.py:85: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
___________________________________ test_str ___________________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_str(folder_structure):
        path = str(folder_structure.joinpath('sous_dossier1/syslog.log'))
>       log_manager = LogManager(convert_logs(load_log_from_file(path), path))

test_log_manager.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
______________________ test_load_log_from_file_not_found _______________________

capsys = <_pytest.capture.CaptureFixture object at 0x7f3b4adacf70>

    def test_load_log_from_file_not_found(capsys):
        load_log_from_file("/notexist.log")
        captured = capsys.readouterr()
>       assert "Le chemin du fichier n'existe pas" in captured.out, \
            "La fonction devrait afficher un message pour avertir que le fichier n'existe pas"
E       AssertionError: La fonction devrait afficher un message pour avertir que le fichier n'existe pas
E       assert "Le chemin du fichier n'existe pas" in "Le fichier n'existe pas\n"
E        +  where "Le fichier n'existe pas\n" = CaptureResult(out="Le fichier n'existe pas\n", err='').out

test_main.py:27: AssertionError
___________________________ test_load_log_from_file ____________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_load_log_from_file(folder_structure):
>       logs = load_log_from_file(str(folder_structure.joinpath('sous_dossier1/syslog.log')))

test_main.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
_____________________ test_load_logs_from_folder_not_found _____________________

capsys = <_pytest.capture.CaptureFixture object at 0x7f3b4adc7bb0>

    def test_load_logs_from_folder_not_found(capsys):
        load_logs_from_folder('./foldernotexist')
        captured = capsys.readouterr()
>       assert "Le chemin du dossier n'existe pas" in captured.out, \
            "La fonction devrait afficher un message pour avertir que le dossier n'existe pas"
E       AssertionError: La fonction devrait afficher un message pour avertir que le dossier n'existe pas
E       assert "Le chemin du dossier n'existe pas" in ''
E        +  where '' = CaptureResult(out='', err='').out

test_main.py:42: AssertionError
__________________________ test_load_logs_from_folder __________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_load_logs_from_folder(folder_structure):
>       logs = load_logs_from_folder(str(folder_structure.joinpath('sous_dossier1')))

test_main.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:30: in load_logs_from_folder
    logs.extend(load_log_from_file(file_path))
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
__________________ test_get_folders_and_subfolders_not_found ___________________

capsys = <_pytest.capture.CaptureFixture object at 0x7f3b4adaf550>

    def test_get_folders_and_subfolders_not_found(capsys):
        load_logs_from_folder('./foldernotexist')
        captured = capsys.readouterr()
>       assert "Le chemin du dossier n'existe pas" in captured.out, \
            "La fonction devrait afficher un message pour avertir que le dossier n'existe pas"
E       AssertionError: La fonction devrait afficher un message pour avertir que le dossier n'existe pas
E       assert "Le chemin du dossier n'existe pas" in ''
E        +  where '' = CaptureResult(out='', err='').out

test_main.py:57: AssertionError
__________________________________ test_load ___________________________________

folder_structure = PosixPath('/tmp/pytest-of-abc/pytest-61/dossier')

    def test_load(folder_structure):
>       logs = load(str(folder_structure))

test_main.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main.py:71: in load
    return load_logs_from_folder(input)
main.py:30: in load_logs_from_folder
    logs.extend(load_log_from_file(file_path))
main.py:16: in load_log_from_file
    return [LogEntry.from_line(line.strip()) for line in file]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <_io.TextIOWrapper name='/tmp/pytest-of-abc/pytest-61/dossier/sous_dossier1/syslog.log' mode='r' encoding='UTF-8'>

>   return [LogEntry.from_line(line.strip()) for line in file]
E   NameError: name 'LogEntry' is not defined

main.py:16: NameError
=========================== short test summary info ============================
FAILED test_log_manager.py::test_init_with_logs - NameError: name 'LogEntry' ...
FAILED test_log_manager.py::test_clear_logs - NameError: name 'LogEntry' is n...
FAILED test_log_manager.py::test_add_logs - NameError: name 'LogEntry' is not...
FAILED test_log_manager.py::test_search_logs - NameError: name 'LogEntry' is ...
FAILED test_log_manager.py::test_search_logs_with_exception - NameError: name...
FAILED test_log_manager.py::test_nbr_logs - NameError: name 'LogEntry' is not...
FAILED test_log_manager.py::test_str - NameError: name 'LogEntry' is not defined
FAILED test_main.py::test_load_log_from_file_not_found - AssertionError: La f...
FAILED test_main.py::test_load_log_from_file - NameError: name 'LogEntry' is ...
FAILED test_main.py::test_load_logs_from_folder_not_found - AssertionError: L...
FAILED test_main.py::test_load_logs_from_folder - NameError: name 'LogEntry' ...
FAILED test_main.py::test_get_folders_and_subfolders_not_found - AssertionErr...
FAILED test_main.py::test_load - NameError: name 'LogEntry' is not defined
========================= 13 failed, 9 passed in 0.08s =========================
